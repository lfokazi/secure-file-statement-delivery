plugins {
    alias(libs.plugins.spring.boot)
    alias(libs.plugins.java)
}

group = 'com.lfokazi.statements'
version = '1.0-0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    // Platform dependencies for BOM management
    implementation(platform(libs.spring.boot.dependencies))
    implementation(platform(libs.spring.cloud.aws.dependencies))

    annotationProcessor libs.spring.boot.configuration.processor
    annotationProcessor libs.lombok
    compileOnly libs.lombok

    implementation project(':core')
    implementation project(':domain')
    implementation project(':dto')

    implementation libs.spring.web
    implementation libs.spring.boot.starter.security
    implementation libs.spring.boot.starter.data.jpa
    implementation libs.spring.cloud.aws.starter.s3
    implementation libs.opentelemetry.api
    implementation libs.opentelemetry.instrumentation.annotations
    implementation libs.opentelemetry.micrometer
    implementation libs.micrometer.core
    implementation libs.jackson.databind
    implementation libs.jackson.datatype.jsr310

    testImplementation project(":test-core")
    testImplementation libs.spring.boot.starter.test
    testImplementation libs.spring.boot.test.containers
    testImplementation libs.bundles.testing.junit
    testImplementation libs.testcontainers.junit.jupiter
    testImplementation libs.testcontainers.localstack
    testImplementation libs.testcontainers.postgresql
    testImplementation libs.spring.cloud.aws.testcontainers
    testRuntimeOnly libs.postgresql.driver
}

test {
    useJUnitPlatform()
}